version: '3'

volumes:
  grafana-data:
    driver: local
  influxdb-storage:
    driver: local
  prometheus-data:
    driver: local

services:

  snipe-db:
    image: lscr.io/linuxserver/mariadb:latest
    container_name: snipe-db
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - MYSQL_ROOT_PASSWORD=${SNIPEDB_ROOTPWD}
      - TZ=${TZ}
      - MYSQL_DATABASE=${SNIPEDB_NAME}
      - MYSQL_USER=${SNIPEDB_USER}
      - MYSQL_PASSWORD=${SNIPEDB_PWD}
      - REMOTE_SQL=${SNIPEDB_REMOTE}
    volumes:
      - ${ROOT}/config/snipe-db:/config
    ports:
      - 3306:3306
    restart: unless-stopped
    
  snipe-it:
    image: lscr.io/linuxserver/snipe-it:latest
    container_name: snipe-it
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - APP_URL=${SNIPEURL}
      - MYSQL_PORT_3306_TCP_ADDR=${SNIPEDB_HOST}
      - MYSQL_PORT_3306_TCP_PORT=${SNIPEDB_PORT}
      - MYSQL_DATABASE=${SNIPEDB_NAME}
      - MYSQL_USER=${SNIPEDB_USER}
      - MYSQL_PASSWORD=${SNIPEDB_PWD}
      - TZ=${TZ}
    volumes:
      - ${ROOT}/config/snipe-it:/config
    ports:
      - 8080:80
    restart: unless-stopped 

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME} # Change this in the .env file.
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PWD} # Change this in the .env file.
 
 heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=${PUID} # .env file.
      - PGID=${PUID} # .env file.
      - TZ=${TZ} # .env file.
    volumes:
      - /heimdall:/config
    ports:
      - 1080:80
      - 8443:443
    restart: unless-stopped    
  
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /etc/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    # ports:
    #   - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped
    privileged: true
      
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
     
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
    
  bookstack:
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    environment:
      - PUID=${PGID} # .env file.
      - PGID=${PGID} # .env file.
      - APP_URL=${BOOKSTACK_URL} # .env file.
      - DB_HOST=bookstack_db
      - DB_USER=${BOOKSTACKDB_USER} # .env file.
      - DB_PASS=${BOOKSTACKDB_PWD} # .env file.
      - DB_DATABASE=bookstackapp
    volumes:
      - ${ROOT}/config/bookstack/:/config
    ports:
      - 6875:80
    restart: unless-stopped
    depends_on:
      - bookstack_db
  bookstack_db:
    image: lscr.io/linuxserver/mariadb
    container_name: bookstack_db
    environment:
      - PUID=${PUID} # .env file.
      - PGID=${PGID} # .env file.
      - MYSQL_ROOT_PASSWORD=${BSMYSQL_ROOTPWD} # .env file.
      - TZ=${TZ} # .env file.
      - MYSQL_DATABASE=bookstackapp
      - MYSQL_USER=${BSMYSQL_USER} # .env file.
      - MYSQL_PASSWORD=${BSMYSQL_PWD} # .env file.
    volumes:
      - ${ROOT}/config/bookstackdb/:/config
    restart: unless-stopped

  
